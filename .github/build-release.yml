name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - host: riscv32im-linux-x86_64
            runs-on: ubuntu-22.04
          - host: riscv32im-linux-arm64
            runs-on: ubuntu-22.04
            arch: arm64
          - host: riscv32im-osx-arm64
            runs-on: macos-11
          - host: riscv32im-osx-x86_64
            runs-on: macos-11
          - host: riscv64im-linux-x86_64
            runs-on: ubuntu-22.04
          - host: riscv64im-linux-arm64
            runs-on: ubuntu-22.04
            arch: arm64
          - host: riscv64im-osx-arm64
            runs-on: macos-14
            arch: arm64
          - host: riscv64im-osx-x86_64
            runs-on: macos-13
            arch: Intel

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake autotools-dev curl python3 python3-pip libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev ninja-build git cmake libglib2.0-dev

      - name: Set up environment (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install python3 gawk gnu-sed gmp mpfr libmpc isl zlib expat texinfo flock

      - name: Build
        run: |
          mkdir -p .dist
          ./build.sh ${{ matrix.host }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: .dist/${{ matrix.host }}.tar.xz
          asset_name: ${{ matrix.host }}.tar.xz
          asset_content_type: application/x-xz
